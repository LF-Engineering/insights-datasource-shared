version: 2.1
references:

base_image: &base_image
  hashicorp/terraform:1.2.2

working_directory: &working_directory
  /go/src/github.com/LF-Engineering/terraform-script

default_config: &default_config
  docker:
    - image: *base_image
  working_directory: *working_directory
  environment:
    BASH_ENV: /root/.bashrc

set_terraform_environment_dev: &set_terraform_environment_dev
  run:
    name: set terraform environment dev
    command: |
      cd && touch $BASH_ENV
      echo 'export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_DEV' >> $BASH_ENV
      echo 'export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_DEV ' >> $BASH_ENV
      echo 'export AWS_DEFAULT_REGION=$AWS_REGION_DEV' >> $BASH_ENV
      echo 'export STAGE=dev' >> $BASH_ENV

set_terraform_environment_prod: &set_terraform_environment_prod
  run:
    name: set terraform environment prod
    command: |
      cd && touch $BASH_ENV
      echo 'export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_PROD' >> $BASH_ENV
      echo 'export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_PROD' >> $BASH_ENV
      echo 'export AWS_DEFAULT_REGION=$AWS_REGION_PROD' >> $BASH_ENV
      echo 'export STAGE=prod' >> $BASH_ENV

terraform_init: &terraform_init
  run:
    name: terraform init
    command: |
      source $BASH_ENV
      cd deploy/${STAGE} && terraform init -backend-config="access_key=${AWS_ACCESS_KEY_ID}" -backend-config="secret_key=${AWS_SECRET_ACCESS_KEY}"

terraform_validate: &terraform_validate
  run:
    name: terraform validate
    command: |
      source $BASH_ENV
      cd deploy/${STAGE} && terraform validate

terraform_plan: &terraform_plan
  run:
    name: terraform plan
    command: |
      source $BASH_ENV
      cd deploy/${STAGE} && TF_VAR_aws_access_key=$AWS_ACCESS_KEY_ID TF_VAR_aws_secret_key=$AWS_SECRET_ACCESS_KEY TF_VAR_eg_aws_region=$AWS_DEFAULT_REGION TF_VAR_eg_account_id=$AWS_ACCOUNT_ID terraform plan -out tfapply

terraform_apply: &terraform_apply
  run:
    name: terraform apply
    command: |
      source $BASH_ENV
      cd deploy/${STAGE} && TF_VAR_aws_access_key=$AWS_ACCESS_KEY_ID TF_VAR_aws_secret_key=$AWS_SECRET_ACCESS_KEY TF_VAR_eg_aws_region=$AWS_DEFAULT_REGION TF_VAR_eg_account_id=$AWS_ACCOUNT_ID terraform apply --auto-approve tfapply

jobs:
  deploy_prod:
    <<: *default_config
    steps:
      - checkout
      - *set_terraform_environment_prod
      - *terraform_init
      - attach_workspace:
          at: *working_directory
      - *terraform_plan
      - *terraform_apply

  deploy_dev:
    <<: *default_config
    steps:
      - checkout
      - *set_terraform_environment_dev
      - *terraform_init
      - attach_workspace:
          at: *working_directory
      - *terraform_plan
      - *terraform_apply

  validate_dev:
    <<: *default_config
    steps:
      - checkout
      - setup_remote_docker
      - *set_terraform_environment_dev
      - *terraform_init
      - *terraform_validate

  validate_prod:
    <<: *default_config
    steps:
      - checkout
      - setup_remote_docker
      - *set_terraform_environment_prod
      - *terraform_init
      - *terraform_validate

workflows:
  build-ecs:
    jobs:
      - validate_dev
      - deploy_dev:
          context:
            - development
          filters:
            branches:
              only: test-kms #main
          requires:
            - validate_dev
      - validate_prod:
          filters:
            branches:
              only: test-kms #main
      - approve-prod:
          type: approval
          filters:
            branches:
              only: test-kms #main
          requires:
            - validate_prod
      - deploy_prod:
          context:
            - production
          filters:
            branches:
              only: test-kms #main
